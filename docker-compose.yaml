# docker-compose.yml
version: "3.8"
services:
  app:
    container_name: go_app
    build: .
    ports:
      - "3001:3001"
    env_file:
      - .env
    environment:
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      # kafka:
      #   condition: service_started

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: byebye
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U postgres && psql -U postgres -d byebye -c 'SELECT 1'",
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
  # zookeeper:
  #   image: bitnami/zookeeper:3.9
  #   container_name: zookeeper
  #   ports:
  #     - "2181:2181"
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes

  # kafka:
  #   image: bitnami/kafka:3.7
  #   container_name: kafka
  #   ports:
  #     - "9092:9092"
  #     - "9093:9093"
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,EXTERNAL://:9093
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9093
  #     - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   depends_on:
  #     - zookeeper

volumes:
  postgres_data:
